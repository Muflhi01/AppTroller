AppTroller
Copyright (C) 2012, 2013, Joe Testa <jtesta@positronsecurity.com>

Version:  v0.03
Date:     UNRELEASED

Web:      <http://www.apptroller.com/>
Twitter:  @AppTroller

----

This program auto-reverse-engineers Android applications, rips out sensitive
API calls, replaces them with spoofed/inert data, then rebuilds the
application.  Root access is not necessary.  It is licensed under the
GNU Public License version 2.


Installation (for Ubuntu 12.04LTS):

   1.)  Download the latest version of apktool from:
        <http://code.google.com/p/android-apktool/>.  Extract it, and place
        'apktool.jar' in the same directory as AppTroller.py.

   2.)  Install the Android SDK from:
        <http://developer.android.com/sdk/index.html>.  Ensure the 'aapt' and
        'zipalign' tools are in your PATH.

        Hint:  once the 'android-sdk-linux.tgz' archive is unpacked, navigate
        to the 'android-sdk-linux/tools' path and execute the 'android'
        program.  Deselect all options except Tools->Android SDK Tools, and
        click the 'Install 1 package' button.

        Lastly, add the 'android-sdk-linux/tools' and
        'android-sdk-linux/platform-tools' directories to your PATH.

   3.)  Install Python and Java:
        # apt-get install python openjdk-7-jdk


Basic example:

    python AppTroller.py EvilApp.apk CleanedEvilApp.apk

... where "EvilApp.apk" is the name of the original application and
"CleanedEvilApp.apk" is the output.


Example #2:

    python AppTroller.py -c alternate.cfg -k EvilApp.apk CleanedEvilApp.apk

... where "-c alternate.cfg" specifies an alternate configuration file (the
default is troll.cfg).  Individual permissions can be enabled or disabled
in these files.

The "-k" option keeps (hence the 'k') the original and modified disassembled
sources, along with the diff file for manual analysis.


----

ChangeLog:

* v0.02:  May 12, 2012:  Initial public release at BSides Rochester.
