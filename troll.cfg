# If enabled, the application's manifest will be modified to turn on
# debugging.
enable_debug = enabled

#
# "Read phone state and identity" / READ_PHONE_STATE
#


# Set to 'enabled' if the READ_PHONE_STATE calls should be neutered.
read_phone_state = enabled


# This returns the telephone number of the device.  You can specify a static
# number like "18001234567".  If you enter less than 11 digits, the program
# will randomly generate the rest for you.  Thus, if you enter "1585", you
# will end up with a random phone number in the 585 area code.  If you enter
# "1585442", you will get a random number in the 585 area code with exchange
# 442.
#
# Value if blank:  a random 11 digit value.
# Applies to:  android.telephony.TelephonyManager.getLine1Number()
line_number = 1212

# This returns the IMEI for GSM phones, or the MEID/ESN for CDMA phones.
# If blank, a random ID is made, otherwise the specified value is used.
# Any string may be entered here, though if you want the result to appear real,
# IMEIs have been observed to be 15 decimal numbers, and MEIDs have been
# observed to be 13 hexidecimal numbers.
#
# Value if blank:  a random 15 digit value.
# Applies to:  android.telephony.TelephonyManager.getDeviceId()
device_id =

# This returns the software version number.  Observed to be "0" for the
# original Motorola Droid.  This value must be specified here (because I don't
# know what the possible values could be).
#
# Value if blank:  '0'
# Applies to:  android.telephony.TelephonyManager.getDeviceSoftwareVersion()
device_software_version =

# Observed to be 20 decimal digits long.
#
# Value if blank:  a random 20 digit value.
# Applies to:  android.telephony.TelephonyManager.getSimSerialNumber()
sim_serial_number =

# Observed to be 16 decimal digits long.
#
# Value if blank:  a random 16 digit value.
# Applies to:  android.telephony.TelephonyManager.getSubscriberId()
subscriber_id =

# Observed to be 'Voicemail' and 'Voice Mail'.
#
# Value if blank:  'Voice Mail'
# Applies to:  android.telephony.TelephonyManager.getVoiceMailAlphaTag()
voicemail_alpha_tag = Stuff

# Observed to be '*86' or '+12121231234' (which corresponds to the
# line_number setting).
# Value if blank:  '+[line_number setting]'
# Applies to:  android.telephony.TelephonyManager.getVoiceMailNumber()
voicemail_number =


#
# "Services that cost you money: send SMS Messages" / SEND_SMS
#

# Set to 'enabled' if the application should be blocked from sending SMS msgs.
send_sms = enabled


#
# "Your messages: receive SMS Messages" / RECEIVE_SMS
#

# Set to 'enabled' if the application should be blocked from receiving SMS msgs.
receive_sms = enabled


#
# "System tools: display system-level alerts" / SYSTEM_ALERT_WINDOW
#

# Set to 'enabled' to prevent the creation of system-level windows and dialogs.
system_alert_window = disabled


#
# "" / READ_LOGS
#

# Set to 'enabled' to intercept calls to read the system log.  Furthermore,
# the system log output can be faked through the 'read_logs_stdout' and
# 'read_logs_stderr' values.
read_logs = enabled
read_logs_stdout = HAHA I'm Using the Internet!!
read_logs_stderr = X


#
# Some advertising modules dynamically check at run-time if the application
# holds a privilege.  If set to 'enabled', this intercepts the check for
# permissions we've modified, but leave the rest alone.
#
dynamic_permission_check = enabled


#
# "Read contacts" / READ_CONTACTS
#

# Set to 'enabled' to intercept queries on the phone's contacts list.
# ** This is EXPERIMENTAL! **
read_contacts = disabled


#
# "" / GET_ACCOUNTS
#

#
get_accounts = disabled
google_account = 
